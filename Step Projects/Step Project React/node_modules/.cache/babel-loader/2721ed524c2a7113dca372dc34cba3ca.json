{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react-step-project\\\\react-step-project\\\\react-step-project\\\\src\\\\context\\\\notes.jsx\";\nimport React, { useState, createContext, useEffect } from 'react';\nimport { getNotes } from '../API/fetchFabric';\nimport { createGlobalStyle } from 'styled-components';\nexport const NotesContext = createContext();\nexport const NoteContextProvider = ({\n  children\n}) => {\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const answer = await getNotes();\n      setNotes(answer);\n    })();\n  }, []);\n  createGlobalStyle;\n  return /*#__PURE__*/React.createElement(NotesContext.Provider, {\n    value: notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/nicat/OneDrive/Рабочий стол/react-step-project/react-step-project/react-step-project/src/context/notes.jsx"],"names":["React","useState","createContext","useEffect","getNotes","createGlobalStyle","NotesContext","NoteContextProvider","children","notes","setNotes","answer"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,QAA0D,OAA1D;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,iBAAT,QAAkC,mBAAlC;AAEA,OAAO,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AAEP,OAAO,MAAMK,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAE/C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMQ,MAAM,GAAG,MAAMP,QAAQ,EAA7B;AACAM,MAAAA,QAAQ,CAACC,MAAD,CAAR;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAMAN,EAAAA,iBAAiB;AAGjB,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEI,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKD,QADL,CADJ;AAKH,CAlBM","sourcesContent":["import React, { useState, createContext, useEffect } from 'react';\r\n\r\nimport { getNotes } from '../API/fetchFabric';\r\nimport { createGlobalStyle } from 'styled-components';\r\n\r\nexport const NotesContext = createContext();\r\n\r\nexport const NoteContextProvider = ({children}) => {\r\n\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const answer = await getNotes();\r\n            setNotes(answer);\r\n        })();\r\n    }, []);\r\n    createGlobalStyle\r\n\r\n\r\n    return(\r\n        <NotesContext.Provider value={notes}>\r\n            {children}\r\n        </NotesContext.Provider>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}