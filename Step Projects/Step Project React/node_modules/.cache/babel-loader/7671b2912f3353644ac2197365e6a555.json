{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react-step-project\\\\react-step-project\\\\react-step-project\\\\src\\\\pages\\\\Edit\\\\index.jsx\";\nimport React from 'react';\nimport styled from 'styled-components';\nexport const Edit = ({\n  history: {\n    push\n  },\n  match: {\n    params: {\n      id\n    }\n  }\n}) => {\n  const [notes, setNotes] = useState([]);\n  const [fields, setFields] = useState({\n    title: \"\",\n    text: \"\",\n    color: \"#d32727\" // archiveStatus: false,\n    // date: Date.now(),\n    // ...initial\n\n  });\n\n  const onChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFields(field => ({ ...field,\n      [name]: value\n    }));\n  };\n\n  const getNotes = async () => {\n    try {\n      const res = await fetch(\"http://localhost:3006/notes\");\n      const data = await res.json();\n      setNotes(data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const editNote = async (id, {\n    title,\n    text\n  }) => {\n    try {\n      const res = await fetch(`http://localhost:3006/notes/${id}`, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          title,\n          text\n        })\n      });\n      const answer = await res.json();\n      getNotes();\n      console.log(answer);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getNotes();\n  }, []);\n\n  const onSubmit = async e => {\n    e.preventDefault(); //editNote(fields.id, fields);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  });\n};","map":{"version":3,"sources":["C:/Users/nicat/OneDrive/Рабочий стол/react-step-project/react-step-project/react-step-project/src/pages/Edit/index.jsx"],"names":["React","styled","Edit","history","push","match","params","id","notes","setNotes","useState","fields","setFields","title","text","color","onChange","e","name","value","target","field","getNotes","res","fetch","data","json","error","console","log","editNote","method","headers","body","JSON","stringify","answer","useEffect","onSubmit","preventDefault"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,OAAO,MAAMC,IAAI,GAAG,CAAC;AAAEC,EAAAA,OAAO,EAAE;AAAEC,IAAAA;AAAF,GAAX;AAAqBC,EAAAA,KAAK,EAAE;AAAEC,IAAAA,MAAM,EAAE;AAAEC,MAAAA;AAAF;AAAV;AAA5B,CAAD,KAAsD;AAEtE,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBC,QAAQ,CAAC,EAAD,CAAlC;AAEA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBF,QAAQ,CAAC;AACjCG,IAAAA,KAAK,EAAE,EAD0B;AAEjCC,IAAAA,IAAI,EAAE,EAF2B;AAGjCC,IAAAA,KAAK,EAAE,SAH0B,CAIjC;AACA;AACA;;AANiC,GAAD,CAApC;;AASA,QAAMC,QAAQ,GAAGC,CAAC,IAAI;AAClB,UAAM;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,QAAkBF,CAAC,CAACG,MAA1B;AACAR,IAAAA,SAAS,CAACS,KAAK,KAAK,EACpB,GAAGA,KADiB;AAEpB,OAACH,IAAD,GAAQC;AAFY,KAAL,CAAN,CAAT;AAIH,GAND;;AAUA,QAAMG,QAAQ,GAAG,YAAY;AACzB,QAAI;AACJ,YAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,6BAAD,CAAvB;AACA,YAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEAjB,MAAAA,QAAQ,CAACgB,IAAD,CAAR;AACC,KALD,CAKE,OAAOE,KAAP,EAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACC;AACJ,GATD;;AAWA,QAAMG,QAAQ,GAAG,OAAOvB,EAAP,EAAW;AAAEM,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAX,KAA8B;AAC/C,QAAI;AAEJ,YAAMS,GAAG,GAAG,MAAMC,KAAK,CAAE,+BAA8BjB,EAAG,EAAnC,EAAsC;AAC3DwB,QAAAA,MAAM,EAAE,OADmD;AAE3DC,QAAAA,OAAO,EAAE;AACP,0BAAgB;AADT,SAFkD;AAK3DC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACtB,UAAAA,KAAD;AAAQC,UAAAA;AAAR,SAAf;AALqD,OAAtC,CAAvB;AAQA,YAAMsB,MAAM,GAAG,MAAMb,GAAG,CAACG,IAAJ,EAArB;AACAJ,MAAAA,QAAQ;AACRM,MAAAA,OAAO,CAACC,GAAR,CAAYO,MAAZ;AAEK,KAdL,CAcM,OAAOT,KAAP,EAAc;AAChBC,MAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACC;AACJ,GAlBD;;AAoBAU,EAAAA,SAAS,CAAC,MAAM;AACZf,IAAAA,QAAQ;AACX,GAFQ,EAEN,EAFM,CAAT;;AAKC,QAAMgB,QAAQ,GAAG,MAAOrB,CAAP,IAAa;AAC3BA,IAAAA,CAAC,CAACsB,cAAF,GAD2B,CAE3B;AACH,GAHA;;AAKD,sBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ;AAKH,CArEM","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nexport const Edit = ({ history: { push }, match: { params: { id } } }) => {\r\n\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    const [fields, setFields] = useState({\r\n        title: \"\",\r\n        text: \"\",\r\n        color: \"#d32727\",\r\n        // archiveStatus: false,\r\n        // date: Date.now(),\r\n        // ...initial\r\n    });\r\n\r\n    const onChange = e => {\r\n        const { name, value } = e.target;\r\n        setFields(field => ({\r\n        ...field,\r\n        [name]: value\r\n        }));\r\n    };\r\n\r\n  \r\n\r\n    const getNotes = async () => {\r\n        try {\r\n        const res = await fetch(\"http://localhost:3006/notes\");\r\n        const data = await res.json();\r\n\r\n        setNotes(data);\r\n        } catch (error) {\r\n        console.log(error);\r\n        }\r\n    };\r\n\r\n    const editNote = async (id, { title, text}) => {\r\n    try {\r\n\r\n    const res = await fetch(`http://localhost:3006/notes/${id}`, {\r\n      method: \"PATCH\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\"\r\n      },\r\n      body: JSON.stringify({title, text})\r\n    });\r\n\r\n    const answer = await res.json();\r\n    getNotes();\r\n    console.log(answer);\r\n\r\n        } catch (error) {\r\n        console.log(error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getNotes();\r\n    }, []);\r\n \r\n    \r\n     const onSubmit = async (e) => {\r\n        e.preventDefault();\r\n        //editNote(fields.id, fields);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n\r\n        </div>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}