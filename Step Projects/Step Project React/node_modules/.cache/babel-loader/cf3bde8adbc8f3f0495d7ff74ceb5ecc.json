{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\react-step-project\\\\react-step-project\\\\react-step-project\\\\src\\\\context\\\\notes.jsx\";\nimport React, { useState, createContext, useEffect, useReducer } from 'react';\nimport { getNotes } from '../API/fetchFabric';\nexport const NotesContext = createContext();\nconst initialState = {\n  notes: []\n};\n\nfunction noteReducer(state, {\n  type,\n  payload\n}) {\n  switch (type) {\n    case 'add_to_archive':\n      return {\n        notes: [...state.notes, payload]\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport const NoteContextProvider = ({\n  children\n}) => {\n  const [notes, setNotes] = useState([]);\n  useEffect(() => {\n    (async () => {\n      const answer = await getNotes();\n      setNotes(answer);\n    })();\n  }, []);\n  const [state, dispatch] = useReducer(noteReducer, initialState);\n\n  const addToArchive = note => {\n    dispatch({\n      type: 'add_to_archive',\n      payLoad: { ...note,\n        id\n      }\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(NotesContext.Provider, {\n    value: notes,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }\n  }, children);\n};","map":{"version":3,"sources":["C:/Users/nicat/OneDrive/Рабочий стол/react-step-project/react-step-project/react-step-project/src/context/notes.jsx"],"names":["React","useState","createContext","useEffect","useReducer","getNotes","NotesContext","initialState","notes","noteReducer","state","type","payload","NoteContextProvider","children","setNotes","answer","dispatch","addToArchive","note","payLoad","id"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,aAA1B,EAAyCC,SAAzC,EAAoDC,UAApD,QAAsE,OAAtE;AAEA,SAASC,QAAT,QAAyB,oBAAzB;AAEA,OAAO,MAAMC,YAAY,GAAGJ,aAAa,EAAlC;AAEP,MAAMK,YAAY,GAAG;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAArB;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAEC,EAAAA,IAAF;AAAQC,EAAAA;AAAR,CAA5B,EAA+C;AAC3C,UAAOD,IAAP;AACI,SAAK,gBAAL;AACI,aAAO;AAAEH,QAAAA,KAAK,EAAE,CAAC,GAAGE,KAAK,CAACF,KAAV,EAAiBI,OAAjB;AAAT,OAAP;;AAEJ;AACI,aAAOF,KAAP;AALR;AAOH;;AAED,OAAO,MAAMG,mBAAmB,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAgB;AAE/C,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBd,QAAQ,CAAC,EAAD,CAAlC;AAEAE,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,YAAY;AACT,YAAMa,MAAM,GAAG,MAAMX,QAAQ,EAA7B;AACAU,MAAAA,QAAQ,CAACC,MAAD,CAAR;AACH,KAHD;AAIH,GALQ,EAKN,EALM,CAAT;AAOA,QAAM,CAACN,KAAD,EAAQO,QAAR,IAAoBb,UAAU,CAACK,WAAD,EAAcF,YAAd,CAApC;;AACA,QAAMW,YAAY,GAAGC,IAAI,IAAI;AACzBF,IAAAA,QAAQ,CAAC;AACLN,MAAAA,IAAI,EAAE,gBADD;AAELS,MAAAA,OAAO,EAAE,EAAC,GAAGD,IAAJ;AAAUE,QAAAA;AAAV;AAFJ,KAAD,CAAR;AAIH,GALD;;AAOA,sBACI,oBAAC,YAAD,CAAc,QAAd;AAAuB,IAAA,KAAK,EAAEb,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKM,QADL,CADJ;AAKH,CAxBM","sourcesContent":["import React, { useState, createContext, useEffect, useReducer } from 'react';\r\n\r\nimport { getNotes } from '../API/fetchFabric';\r\n\r\nexport const NotesContext = createContext();\r\n\r\nconst initialState = { notes: [ ]};\r\n\r\nfunction noteReducer(state, { type, payload }) {\r\n    switch(type) {\r\n        case 'add_to_archive':\r\n            return { notes: [...state.notes, payload] }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n \r\nexport const NoteContextProvider = ({children}) => {\r\n\r\n    const [notes, setNotes] = useState([]);\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            const answer = await getNotes();\r\n            setNotes(answer);\r\n        })();\r\n    }, []);\r\n\r\n    const [state, dispatch] = useReducer(noteReducer, initialState)\r\n    const addToArchive = note => {\r\n        dispatch({\r\n            type: 'add_to_archive',\r\n            payLoad: {...note, id} \r\n        })\r\n    }\r\n\r\n    return(\r\n        <NotesContext.Provider value={notes}>\r\n            {children}\r\n        </NotesContext.Provider>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}