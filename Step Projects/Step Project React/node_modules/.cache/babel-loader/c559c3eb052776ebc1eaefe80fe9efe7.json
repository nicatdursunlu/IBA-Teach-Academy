{"ast":null,"code":"const domain = './notes.json';\n\nfunction fetchFabric(endpoint, method) {\n  return async (params = {}) => {\n    const options = {\n      headers: {\n        \"Content-Type\": 'application/json'\n      }\n    };\n    let getParams = '';\n\n    if (method !== 'GET') {\n      options.method = method;\n      options.body = JSON.stringify(params);\n    } else {\n      getParams += `?`;\n\n      for (let key in params) {\n        getParams += `${key}=${params[key]}&`;\n      }\n    }\n\n    const res = await fetch(`${domain}${endpoint}${getParams}`, options);\n    return res.json();\n  };\n}\n\nexport const getNotes = fetchFabric('/notes', \"GET\");\nexport const createNote = fetchFabric('/notes', \"POST\");","map":{"version":3,"sources":["C:/Users/nicat/OneDrive/Рабочий стол/react-step-project/react-step-project/react-step-project/src/API/index.jsx"],"names":["domain","fetchFabric","endpoint","method","params","options","headers","getParams","body","JSON","stringify","key","res","fetch","json","getNotes","createNote"],"mappings":"AAAA,MAAMA,MAAM,GAAG,cAAf;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+BC,MAA/B,EAAuC;AACnC,SAAO,OAAOC,MAAM,GAAG,EAAhB,KAAuB;AAE1B,UAAMC,OAAO,GAAG;AACZC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADG,KAAhB;AAMA,QAAIC,SAAS,GAAG,EAAhB;;AACA,QAAIJ,MAAM,KAAK,KAAf,EAAsB;AAClBE,MAAAA,OAAO,CAACF,MAAR,GAAiBA,MAAjB;AACAE,MAAAA,OAAO,CAACG,IAAR,GAAeC,IAAI,CAACC,SAAL,CAAeN,MAAf,CAAf;AACH,KAHD,MAIK;AACDG,MAAAA,SAAS,IAAK,GAAd;;AACA,WAAK,IAAII,GAAT,IAAgBP,MAAhB,EAAwB;AACpBG,QAAAA,SAAS,IAAK,GAAEI,GAAI,IAAGP,MAAM,CAACO,GAAD,CAAM,GAAnC;AACH;AACJ;;AAED,UAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEb,MAAO,GAAEE,QAAS,GAAEK,SAAU,EAAlC,EAAqCF,OAArC,CAAvB;AACA,WAAOO,GAAG,CAACE,IAAJ,EAAP;AACH,GAtBD;AAuBH;;AAED,OAAO,MAAMC,QAAQ,GAAGd,WAAW,CAAC,QAAD,EAAW,KAAX,CAA5B;AACP,OAAO,MAAMe,UAAU,GAAGf,WAAW,CAAC,QAAD,EAAW,MAAX,CAA9B","sourcesContent":["const domain = './notes.json';\r\n\r\nfunction fetchFabric(endpoint, method) {\r\n    return async (params = {}) => {\r\n\r\n        const options = {\r\n            headers: {\r\n                \"Content-Type\": 'application/json'\r\n            }\r\n        }\r\n\r\n        let getParams = '';\r\n        if (method !== 'GET') {\r\n            options.method = method;\r\n            options.body = JSON.stringify(params);\r\n        } \r\n        else {\r\n            getParams += `?`\r\n            for (let key in params) {\r\n                getParams += `${key}=${params[key]}&`;\r\n            }\r\n        }\r\n\r\n        const res = await fetch(`${domain}${endpoint}${getParams}`, options);\r\n        return res.json();\r\n    }\r\n}\r\n\r\nexport const getNotes = fetchFabric('/notes', \"GET\");\r\nexport const createNote = fetchFabric('/notes', \"POST\");\r\n\r\n"]},"metadata":{},"sourceType":"module"}