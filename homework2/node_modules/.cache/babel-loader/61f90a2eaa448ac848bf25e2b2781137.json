{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nicat\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\homewroks\\\\homework2\\\\src\\\\components\\\\SingleProduct.jsx\";\nimport React, { useState, useEffect } from 'react';\nimport { Modal } from './Modal';\nimport { Button } from './Button';\nimport star from '../img/star.png';\nimport star_black from '../img/star_black.png';\nexport const SingleProduct = ({\n  name,\n  italic,\n  price,\n  desc1,\n  desc2\n}) => {\n  const [data, setData] = useState({\n    products: []\n  });\n  console.log(data);\n\n  const getData = async url => {\n    const response = await fetch(url);\n    const newData = await response.json();\n    setData(data => ({ ...newData,\n      products: [...data.products, ...newData.products]\n    }));\n    console.log(data);\n  };\n\n  useEffect(() => {\n    getData('./products.json');\n  }, []);\n  const [modalStatus, setModalStatus] = useState(false);\n\n  const toggleModal = () => setModalStatus(v => !v);\n\n  const [addToCartStatus, setAddToCartStatus] = useState(false);\n  return React.createElement(\"div\", {\n    className: \"card\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, data.products.map(({\n    name,\n    url,\n    id,\n    image,\n    price,\n    desc,\n    onClick\n  }) => React.createElement(\"div\", {\n    className: \"cart-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: image,\n    alt: name,\n    className: \"img\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }), React.createElement(\"p\", {\n    className: \"product-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, name), React.createElement(\"div\", {\n    className: \"stars\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: star,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: star,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: star,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: star,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }), React.createElement(\"img\", {\n    src: star_black,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"product-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, desc), React.createElement(\"p\", {\n    className: \"price\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, price, React.createElement(Button, {\n    backgroundColor: \"white\",\n    text: \"Add to cart\",\n    onClick: toggleModal,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), modalStatus && React.createElement(Modal, {\n    header: \"Do you want do add this product to your cart?\",\n    closeIcon: true,\n    text: \"If you want to add thisproduct to your cart press OK\\\\n \\r else press Cancel\",\n    close: toggleModal // actions={[\n    //     <Button\n    //         key={1}\n    //         backgroundColor='rgba(0,0,0,0.2)'\n    //         text='Ok'\n    //         onClick={() => alert('File deleted')} \n    //     />,\n    //     <Button\n    //         key={2}\n    //         backgroundColor='rgba(0,0,0,0.2)'\n    //         text='Cancel'\n    //         onClick={toggleModal}  \n    //     />\n    // ]}\n    ,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["C:/Users/nicat/OneDrive/Рабочий стол/homewroks/homework2/src/components/SingleProduct.jsx"],"names":["React","useState","useEffect","Modal","Button","star","star_black","SingleProduct","name","italic","price","desc1","desc2","data","setData","products","console","log","getData","url","response","fetch","newData","json","modalStatus","setModalStatus","toggleModal","v","addToCartStatus","setAddToCartStatus","map","id","image","desc","onClick"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport {Modal} from './Modal';\r\nimport {Button} from './Button';\r\n\r\nimport star from '../img/star.png';\r\nimport star_black from '../img/star_black.png';\r\n\r\n\r\nexport const SingleProduct = ({name, italic, price, desc1, desc2}) => {\r\n\r\nconst [data, setData] = useState({ products: [] });\r\n  console.log(data);\r\n\r\n  const getData = async (url) => {\r\n    const response = await fetch(url);\r\n    const newData = await response.json();\r\n    setData(data => ({\r\n      ...newData,\r\n      products: [...data.products, ...newData.products]\r\n    }));\r\n    console.log(data);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getData('./products.json')\r\n  }, []);\r\n\r\n  \r\n  const [modalStatus, setModalStatus] = useState(false);\r\n  const toggleModal = () => setModalStatus (v => !v);\r\n\r\n  const [addToCartStatus, setAddToCartStatus] = useState(false);\r\n  \r\n    return(\r\n        <div className=\"card\">\r\n            {data.products.map(({name, url, id, image, price, desc, onClick}) => (\r\n                <div className=\"cart-description\">\r\n                    <img src={image} alt={name} className=\"img\"/>\r\n                    <p className=\"product-name\">\r\n                        {name}\r\n                    </p>\r\n                    <div className=\"stars\">\r\n                        <img src={star}/>\r\n                        <img src={star}/>\r\n                        <img src={star}/>\r\n                        <img src={star}/>\r\n                        <img src={star_black}/>\r\n                    </div>\r\n                    <p className=\"product-description\">\r\n                        {desc}\r\n                    </p>\r\n                    <p className=\"price\">{price}\r\n                    <Button\r\n                        backgroundColor='white'\r\n                        text='Add to cart'\r\n                        onClick={toggleModal} \r\n                    />\r\n                    </p> \r\n                    {modalStatus && (\r\n                        <Modal\r\n                            header='Do you want do add this product to your cart?'\r\n                            closeIcon={true}\r\n                            text=\"If you want to add thisproduct to your cart press OK\\n \r\n                                else press Cancel\"\r\n                            close={toggleModal}\r\n                            // actions={[\r\n                            //     <Button\r\n                            //         key={1}\r\n                            //         backgroundColor='rgba(0,0,0,0.2)'\r\n                            //         text='Ok'\r\n                            //         onClick={() => alert('File deleted')} \r\n                            //     />,\r\n                            //     <Button\r\n                            //         key={2}\r\n                            //         backgroundColor='rgba(0,0,0,0.2)'\r\n                            //         text='Cancel'\r\n                            //         onClick={toggleModal}  \r\n                            //     />\r\n                            // ]}\r\n                        />\r\n                        )\r\n                    }\r\n                    \r\n                </div>\r\n            ))}\r\n            \r\n        </div>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}